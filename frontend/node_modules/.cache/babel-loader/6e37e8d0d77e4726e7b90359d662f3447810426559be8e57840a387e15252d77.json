{"ast":null,"code":"var _jsxFileName = \"/Users/sunilbista/Personal/Capstone_project/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// This is the main component of the application, serving as the entry point.\n// It renders a user interface with options to switch between two different graph visualization styles.\nimport \"./App.css\"; // Importing the CSS file for styling.\nimport { useState } from \"react\"; // Importing the useState hook from React.\nimport Graph from \"./components/Graph/Graph\"; // Importing the Graph component.\nimport ForceGraph from \"./components/ForceGraph/ForceGraph\"; // Importing the ForceGraph component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define the data representing nodes and links for the graph visualization.\n  const data = {\n    // An array of nodes, each with an 'id', 'group', and 'name'.\n    // These nodes will be used to create the graph structure.\n    nodes: [{\n      id: \"TestOne\",\n      group: 1,\n      name: \"Topic and Discussion One\"\n    }, {\n      id: \"TestTwo\",\n      group: 1,\n      name: \"Topic and Discussion Two\"\n    }, {\n      id: \"TestThree\",\n      group: 3,\n      name: \"Topic and Discussion Three\"\n    }, {\n      id: \"TestFour\",\n      group: 4,\n      name: \"Topic and Discussion Four\"\n    }, {\n      id: \"TestFive\",\n      group: 5,\n      name: \"Topic and Discussion Five\"\n    }, {\n      id: \"TestSix\",\n      group: 6,\n      name: \"Topic and Discussion Six\"\n    }, {\n      id: \"TestSeven\",\n      group: 7,\n      name: \"Topic and Discussion Seven\"\n    }],\n    // An array of links connecting nodes.\n    // Each link has a 'source' and 'target' node, along with a 'value' and 'name'.\n    links: [{\n      source: \"TestOne\",\n      target: \"TestTwo\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestTwo\",\n      target: \"TestSeven\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestFour\",\n      target: \"TestTwo\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestThree\",\n      target: \"TestFive\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestFive\",\n      target: \"TestSix\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestSix\",\n      target: \"TestSeven\",\n      value: 20,\n      name: \"path\"\n    }, {\n      source: \"TestFour\",\n      target: \"TestFive\",\n      value: 20,\n      name: \"path\"\n    }]\n  };\n\n  // Define a state variable 'graphStyle' and a function 'setGraphStyle'\n  // to manage the selected graph visualization style.\n  const [graphStyle, setGraphStyle] = useState(\"\");\n  return (\n    /*#__PURE__*/\n    // Render the main application container.\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mind Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGraphStyle(\"force\"),\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"React Force Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGraphStyle(\"d3\"),\n        children: \"D3 Force graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), graphStyle === \"d3\" ? /*#__PURE__*/_jsxDEV(Graph, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this) : graphStyle === \"force\" ? /*#__PURE__*/_jsxDEV(ForceGraph, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"YykD0acIO+1HkPL6m/4iiDdAC1c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Graph","ForceGraph","jsxDEV","_jsxDEV","App","_s","data","nodes","id","group","name","links","source","target","value","graphStyle","setGraphStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginRight","_c","$RefreshReg$"],"sources":["/Users/sunilbista/Personal/Capstone_project/frontend/src/App.js"],"sourcesContent":["// This is the main component of the application, serving as the entry point.\n// It renders a user interface with options to switch between two different graph visualization styles.\nimport \"./App.css\"; // Importing the CSS file for styling.\nimport { useState } from \"react\"; // Importing the useState hook from React.\nimport Graph from \"./components/Graph/Graph\"; // Importing the Graph component.\nimport ForceGraph from \"./components/ForceGraph/ForceGraph\"; // Importing the ForceGraph component.\nfunction App() {\n  // Define the data representing nodes and links for the graph visualization.\n  const data = {\n    // An array of nodes, each with an 'id', 'group', and 'name'.\n    // These nodes will be used to create the graph structure.\n    nodes: [\n      {\n        id: \"TestOne\",\n        group: 1,\n        name: \"Topic and Discussion One\",\n      },\n      {\n        id: \"TestTwo\",\n        group: 1,\n        name: \"Topic and Discussion Two\",\n      },\n      {\n        id: \"TestThree\",\n        group: 3,\n        name: \"Topic and Discussion Three\",\n      },\n      {\n        id: \"TestFour\",\n        group: 4,\n        name: \"Topic and Discussion Four\",\n      },\n      {\n        id: \"TestFive\",\n        group: 5,\n        name: \"Topic and Discussion Five\",\n      },\n      {\n        id: \"TestSix\",\n        group: 6,\n        name: \"Topic and Discussion Six\",\n      },\n      {\n        id: \"TestSeven\",\n        group: 7,\n        name: \"Topic and Discussion Seven\",\n      },\n    ],\n    // An array of links connecting nodes.\n    // Each link has a 'source' and 'target' node, along with a 'value' and 'name'.\n    links: [\n      {\n        source: \"TestOne\",\n        target: \"TestTwo\",\n        value: 20,\n        name: \"path\",\n      },\n      {\n        source: \"TestTwo\",\n        target: \"TestSeven\",\n        value: 20,\n        name: \"path\",\n      },\n\n      {\n        source: \"TestFour\",\n        target: \"TestTwo\",\n        value: 20,\n        name: \"path\",\n      },\n      {\n        source: \"TestThree\",\n        target: \"TestFive\",\n        value: 20,\n        name: \"path\",\n      },\n      {\n        source: \"TestFive\",\n        target: \"TestSix\",\n        value: 20,\n        name: \"path\",\n      },\n      {\n        source: \"TestSix\",\n        target: \"TestSeven\",\n        value: 20,\n        name: \"path\",\n      },\n      {\n        source: \"TestFour\",\n        target: \"TestFive\",\n        value: 20,\n        name: \"path\",\n      },\n    ],\n  };\n\n  // Define a state variable 'graphStyle' and a function 'setGraphStyle'\n  // to manage the selected graph visualization style.\n  const [graphStyle, setGraphStyle] = useState(\"\");\n\n  return (\n    // Render the main application container.\n    <div className=\"App\">\n      <h1>Mind Map</h1>\n      {/* Render buttons to switch between graph visualization styles. */}\n      <button\n        onClick={() => setGraphStyle(\"force\")}\n        style={{ marginRight: \"10px\" }}\n      >\n        React Force Graph\n      </button>\n      <button onClick={() => setGraphStyle(\"d3\")}>D3 Force graph</button>\n      {/* Conditionally render either the 'Graph' or 'ForceGraph' component\n           based on the selected 'graphStyle' state. */}\n      {graphStyle === \"d3\" ? (\n        <Graph data={data} />\n      ) : graphStyle === \"force\" ? (\n        <ForceGraph data={data} />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}